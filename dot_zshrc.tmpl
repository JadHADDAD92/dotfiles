# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
path+=('/usr/local/bin')


HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000

setopt autocd beep extendedglob nomatch notify promptsubst

# ctrl+<- | ctrl+->
bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word
bindkey  "^[[H"   beginning-of-line
bindkey  "^[[F"   end-of-line

if type brew &>/dev/null
then
  FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
  # FPATH="~/.zsh/completion:${FPATH}"
fi
fpath=(~/.zsh/completion $fpath)
fpath+=~/.zfunc # autocompletions (poetry, etc...)
fpath+=~/_task

autoload -Uz compinit && compinit -i
autoload -Uz compinit && compinit
autoload -U colors && colors
autoload -U +X bashcompinit && bashcompinit

# case-insensitive matching only if there are no case-sensitive matches
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}'
export PATH="/usr/local/git/bin:$PATH"

LOCALBINPATH=~/.local/bin
export PATH="$LOCALBINPATH:$PATH"

{{ if stat (joinPath .chezmoi.homeDir "development/flutter/bin") }}
FLUTTERPATH=~/development/flutter/bin
export PATH="$FLUTTERPATH:$PATH"
{{ end -}}


{{ if stat (joinPath .chezmoi.homeDir ".cargo") }}
CARGOPATH=~/.cargo/bin
export PATH="$CARGOPATH:$PATH"
{{ end -}}

{{ if stat (joinPath .chezmoi.homeDir "go/bin") }}
GOBINPATH=~/go/bin
export PATH="$GOBINPATH:$PATH"
{{ end }}

{{ if eq .chezmoi.os "darwin" -}}
AWSPATH=/opt/homebrew/bin/aws_completer
export PATH="$AWSPATH:$PATH"
{{ end -}}

. ~/.zsh_aliases
. ~/.zsh_completion
. ~/.antidote/antidote.zsh

# Load ZSH plugins
antidote load

{{ if eq .chezmoi.os "darwin" -}}
eval $(SHELL=/bin/sh lesspipe.sh)
{{ else if eq .chezmoi.os "linux" -}}
eval $(SHELL=/bin/sh lesspipe)
{{ end -}}

eval "$(zoxide init zsh)"
eval "$(starship init zsh)"

gpgconf --launch gpg-agent

zstyle ':completion:*' menu select


auto_activate_venv() {
    for venv_dir in venv .venv env .env; do
        if [ -f "$PWD/$venv_dir/bin/activate" ]; then
            source "$PWD/$venv_dir/bin/activate"
            echo "Activated virtual environment: $PWD/$venv_dir"
            return
        fi
    done
}

# Hook into directory changes
autoload -U add-zsh-hook
add-zsh-hook chpwd auto_activate_venv

# Run for the initial directory on shell startup
auto_activate_venv

